// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 16.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public partial class UIMap
    {
        
        /// <summary>
        /// StartApplication
        /// </summary>
        public void StartApplication()
        {
            #region Variable Declarations
            WinEdit uIИмяEdit = this.UIПроводникWindow.UIItemWindow.UIOkpo_lab1ListItem.UIИмяEdit;
            #endregion

            // Двойной щелчок "Имя" надпись
            Mouse.DoubleClick(uIИмяEdit, new Point(41, 7));
        }
        
        /// <summary>
        /// Input_dddddbbbcccaa - Используйте "Input_dddddbbbcccaaParams" для передачи параметров в этот метод.
        /// </summary>
        public void Input_dddddbbbcccaa()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox1Window.UITextBox1Edit;
            #endregion

            // Тип "dddddbbbcccaa" в "textBox1" надпись
            uITextBox1Edit.Text = this.Input_dddddbbbcccaaParams.UITextBox1EditText;
        }
        
        /// <summary>
        /// CompressText
        /// </summary>
        public void CompressText()
        {
            #region Variable Declarations
            WinButton uIОбработатьтекстButton = this.UIЛабораторнаяработа3ВWindow.UIОбработатьтекстWindow.UIОбработатьтекстButton;
            #endregion

            // Щелкните "Обработать текст" кнопка
            Mouse.Click(uIОбработатьтекстButton, new Point(65, 23));
        }
        
        /// <summary>
        /// StopApplication
        /// </summary>
        public void StopApplication()
        {
            #region Variable Declarations
            WinButton uIВыходButton = this.UIЛабораторнаяработа3ВWindow.UIВыходWindow.UIВыходButton;
            #endregion

            // Щелкните "Выход" кнопка
            Mouse.Click(uIВыходButton, new Point(86, 23));
        }
        
        /// <summary>
        /// Input_222222Dsss234bbaact - Используйте "Input_222222Dsss234bbaactParams" для передачи параметров в этот метод.
        /// </summary>
        public void Input_222222Dsss234bbaact()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox1Window.UITextBox1Edit;
            #endregion

            // Тип "222222" в "textBox1" надпись
            uITextBox1Edit.Text = this.Input_222222Dsss234bbaactParams.UITextBox1EditText;

            // Тип "Alt + {LShiftKey}" в "textBox1" надпись
            Keyboard.SendKeys(uITextBox1Edit, this.Input_222222Dsss234bbaactParams.UITextBox1EditSendKeys, ModifierKeys.Alt);

            // Тип "222222Dsss234bbaact" в "textBox1" надпись
            uITextBox1Edit.Text = this.Input_222222Dsss234bbaactParams.UITextBox1EditText1;
        }
        
        /// <summary>
        /// SecondAssertMethod - Используйте "SecondAssertMethodExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void SecondAssertMethod()
        {
            #region Variable Declarations
            WinEdit uITextBox2Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox2Window.UITextBox2Edit;
            #endregion

            // Убедитесь, что свойство Text "textBox2" надпись равняется "(6)2D(3)s234(2)b(2)act"
            Assert.AreEqual(this.SecondAssertMethodExpectedValues.UITextBox2EditText, uITextBox2Edit.Text);
        }
        
        /// <summary>
        /// Input_1234567890000000000 - Используйте "Input_1234567890000000000Params" для передачи параметров в этот метод.
        /// </summary>
        public void Input_1234567890000000000()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox1Window.UITextBox1Edit;
            #endregion

            // Тип "1234567890000000000" в "textBox1" надпись
            uITextBox1Edit.Text = this.Input_1234567890000000000Params.UITextBox1EditText;
        }
        
        /// <summary>
        /// ThirdAssertMethod - Используйте "ThirdAssertMethodExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void ThirdAssertMethod()
        {
            #region Variable Declarations
            WinEdit uITextBox2Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox2Window.UITextBox2Edit;
            #endregion

            // Убедитесь, что свойство Text "textBox2" надпись равняется "123456789(10)0"
            Assert.AreEqual(this.ThirdAssertMethodExpectedValues.UITextBox2EditText, uITextBox2Edit.Text);

            // Убедитесь, что свойство Text "textBox2" надпись равняется "123456789(10)0"
            Assert.AreEqual(this.ThirdAssertMethodExpectedValues.UITextBox2EditText1, uITextBox2Edit.Text);
        }
        
        /// <summary>
        /// FirstAssertMethod - Используйте "FirstAssertMethodExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void FirstAssertMethod()
        {
            #region Variable Declarations
            WinEdit uITextBox2Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox2Window.UITextBox2Edit;
            #endregion

            // Убедитесь, что свойство Text "textBox2" надпись равняется "(5)d(3)b(3)c(2)a"
            Assert.AreEqual(this.FirstAssertMethodExpectedValues.UITextBox2EditText, uITextBox2Edit.Text);
        }
        
        /// <summary>
        /// Insert_aaaaaaaaaaaaaaaaaBCD - Используйте "Insert_aaaaaaaaaaaaaaaaaBCDParams" для передачи параметров в этот метод.
        /// </summary>
        public void Insert_aaaaaaaaaaaaaaaaaBCD()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox1Window.UITextBox1Edit;
            #endregion

            // Тип "aaaaaaaaaaaaaaa" в "textBox1" надпись
            uITextBox1Edit.Text = this.Insert_aaaaaaaaaaaaaaaaaBCDParams.UITextBox1EditText;

            // Тип "aaaaaaaaaaaaaaaaaBCD" в "textBox1" надпись
            uITextBox1Edit.Text = this.Insert_aaaaaaaaaaaaaaaaaBCDParams.UITextBox1EditText1;
        }
        
        /// <summary>
        /// FourthAssertMethod - Используйте "FourthAssertMethodExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void FourthAssertMethod()
        {
            #region Variable Declarations
            WinEdit uITextBox2Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox2Window.UITextBox2Edit;
            #endregion

            // Убедитесь, что свойство Text "textBox2" надпись равняется "(17)aBCD"
            Assert.AreEqual(this.FourthAssertMethodExpectedValues.UITextBox2EditText, uITextBox2Edit.Text);
        }
        
        /// <summary>
        /// Insert_advcsdc245 - Используйте "Insert_advcsdc245Params" для передачи параметров в этот метод.
        /// </summary>
        public void Insert_advcsdc245()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox1Window.UITextBox1Edit;
            #endregion

            // Тип "ADVCSDC245" в "textBox1" надпись
            uITextBox1Edit.Text = this.Insert_advcsdc245Params.UITextBox1EditText;
        }
        
        /// <summary>
        /// CloseDialog
        /// </summary>
        public void CloseDialog()
        {
            #region Variable Declarations
            WinButton uIОКButton = this.UIСообщениеWindow.UIОКWindow.UIОКButton;
            #endregion

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(17, 15));
        }
        
        /// <summary>
        /// FifthAssertMethod - Используйте "FifthAssertMethodExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void FifthAssertMethod()
        {
            #region Variable Declarations
            WinEdit uITextBox2Edit = this.UIЛабораторнаяработа3ВWindow.UITextBox2Window.UITextBox2Edit;
            #endregion

            // Убедитесь, что свойство Text "textBox2" надпись равняется ""
            Assert.AreEqual(this.FifthAssertMethodExpectedValues.UITextBox2EditText, uITextBox2Edit.Text);
        }
        
        #region Properties
        public virtual Input_dddddbbbcccaaParams Input_dddddbbbcccaaParams
        {
            get
            {
                if ((this.mInput_dddddbbbcccaaParams == null))
                {
                    this.mInput_dddddbbbcccaaParams = new Input_dddddbbbcccaaParams();
                }
                return this.mInput_dddddbbbcccaaParams;
            }
        }
        
        public virtual Input_222222Dsss234bbaactParams Input_222222Dsss234bbaactParams
        {
            get
            {
                if ((this.mInput_222222Dsss234bbaactParams == null))
                {
                    this.mInput_222222Dsss234bbaactParams = new Input_222222Dsss234bbaactParams();
                }
                return this.mInput_222222Dsss234bbaactParams;
            }
        }
        
        public virtual SecondAssertMethodExpectedValues SecondAssertMethodExpectedValues
        {
            get
            {
                if ((this.mSecondAssertMethodExpectedValues == null))
                {
                    this.mSecondAssertMethodExpectedValues = new SecondAssertMethodExpectedValues();
                }
                return this.mSecondAssertMethodExpectedValues;
            }
        }
        
        public virtual Input_1234567890000000000Params Input_1234567890000000000Params
        {
            get
            {
                if ((this.mInput_1234567890000000000Params == null))
                {
                    this.mInput_1234567890000000000Params = new Input_1234567890000000000Params();
                }
                return this.mInput_1234567890000000000Params;
            }
        }
        
        public virtual ThirdAssertMethodExpectedValues ThirdAssertMethodExpectedValues
        {
            get
            {
                if ((this.mThirdAssertMethodExpectedValues == null))
                {
                    this.mThirdAssertMethodExpectedValues = new ThirdAssertMethodExpectedValues();
                }
                return this.mThirdAssertMethodExpectedValues;
            }
        }
        
        public virtual FirstAssertMethodExpectedValues FirstAssertMethodExpectedValues
        {
            get
            {
                if ((this.mFirstAssertMethodExpectedValues == null))
                {
                    this.mFirstAssertMethodExpectedValues = new FirstAssertMethodExpectedValues();
                }
                return this.mFirstAssertMethodExpectedValues;
            }
        }
        
        public virtual Insert_aaaaaaaaaaaaaaaaaBCDParams Insert_aaaaaaaaaaaaaaaaaBCDParams
        {
            get
            {
                if ((this.mInsert_aaaaaaaaaaaaaaaaaBCDParams == null))
                {
                    this.mInsert_aaaaaaaaaaaaaaaaaBCDParams = new Insert_aaaaaaaaaaaaaaaaaBCDParams();
                }
                return this.mInsert_aaaaaaaaaaaaaaaaaBCDParams;
            }
        }
        
        public virtual FourthAssertMethodExpectedValues FourthAssertMethodExpectedValues
        {
            get
            {
                if ((this.mFourthAssertMethodExpectedValues == null))
                {
                    this.mFourthAssertMethodExpectedValues = new FourthAssertMethodExpectedValues();
                }
                return this.mFourthAssertMethodExpectedValues;
            }
        }
        
        public virtual Insert_advcsdc245Params Insert_advcsdc245Params
        {
            get
            {
                if ((this.mInsert_advcsdc245Params == null))
                {
                    this.mInsert_advcsdc245Params = new Insert_advcsdc245Params();
                }
                return this.mInsert_advcsdc245Params;
            }
        }
        
        public virtual FifthAssertMethodExpectedValues FifthAssertMethodExpectedValues
        {
            get
            {
                if ((this.mFifthAssertMethodExpectedValues == null))
                {
                    this.mFifthAssertMethodExpectedValues = new FifthAssertMethodExpectedValues();
                }
                return this.mFifthAssertMethodExpectedValues;
            }
        }
        
        public UIПроводникWindow UIПроводникWindow
        {
            get
            {
                if ((this.mUIПроводникWindow == null))
                {
                    this.mUIПроводникWindow = new UIПроводникWindow();
                }
                return this.mUIПроводникWindow;
            }
        }
        
        public UIЛабораторнаяработа3ВWindow UIЛабораторнаяработа3ВWindow
        {
            get
            {
                if ((this.mUIЛабораторнаяработа3ВWindow == null))
                {
                    this.mUIЛабораторнаяработа3ВWindow = new UIЛабораторнаяработа3ВWindow();
                }
                return this.mUIЛабораторнаяработа3ВWindow;
            }
        }
        
        public UIСообщениеWindow UIСообщениеWindow
        {
            get
            {
                if ((this.mUIСообщениеWindow == null))
                {
                    this.mUIСообщениеWindow = new UIСообщениеWindow();
                }
                return this.mUIСообщениеWindow;
            }
        }
        #endregion
        
        #region Fields
        private Input_dddddbbbcccaaParams mInput_dddddbbbcccaaParams;
        
        private Input_222222Dsss234bbaactParams mInput_222222Dsss234bbaactParams;
        
        private SecondAssertMethodExpectedValues mSecondAssertMethodExpectedValues;
        
        private Input_1234567890000000000Params mInput_1234567890000000000Params;
        
        private ThirdAssertMethodExpectedValues mThirdAssertMethodExpectedValues;
        
        private FirstAssertMethodExpectedValues mFirstAssertMethodExpectedValues;
        
        private Insert_aaaaaaaaaaaaaaaaaBCDParams mInsert_aaaaaaaaaaaaaaaaaBCDParams;
        
        private FourthAssertMethodExpectedValues mFourthAssertMethodExpectedValues;
        
        private Insert_advcsdc245Params mInsert_advcsdc245Params;
        
        private FifthAssertMethodExpectedValues mFifthAssertMethodExpectedValues;
        
        private UIПроводникWindow mUIПроводникWindow;
        
        private UIЛабораторнаяработа3ВWindow mUIЛабораторнаяработа3ВWindow;
        
        private UIСообщениеWindow mUIСообщениеWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "Input_dddddbbbcccaa"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class Input_dddddbbbcccaaParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "dddddbbbcccaa" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "dddddbbbcccaa";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "Input_222222Dsss234bbaact"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class Input_222222Dsss234bbaactParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "222222" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "222222";
        
        /// <summary>
        /// Тип "Alt + {LShiftKey}" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditSendKeys = "{LShiftKey}";
        
        /// <summary>
        /// Тип "222222Dsss234bbaact" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText1 = "222222Dsss234bbaact";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "SecondAssertMethod"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class SecondAssertMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBox2" надпись равняется "(6)2D(3)s234(2)b(2)act"
        /// </summary>
        public string UITextBox2EditText = "(6)2D(3)s234(2)b(2)act";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "Input_1234567890000000000"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class Input_1234567890000000000Params
    {
        
        #region Fields
        /// <summary>
        /// Тип "1234567890000000000" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "1234567890000000000";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "ThirdAssertMethod"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class ThirdAssertMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBox2" надпись равняется "123456789(10)0"
        /// </summary>
        public string UITextBox2EditText = "123456789(10)0";
        
        /// <summary>
        /// Убедитесь, что свойство Text "textBox2" надпись равняется "123456789(10)0"
        /// </summary>
        public string UITextBox2EditText1 = "123456789(10)0";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "FirstAssertMethod"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class FirstAssertMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBox2" надпись равняется "(5)d(3)b(3)c(2)a"
        /// </summary>
        public string UITextBox2EditText = "(5)d(3)b(3)c(2)a";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "Insert_aaaaaaaaaaaaaaaaaBCD"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class Insert_aaaaaaaaaaaaaaaaaBCDParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "aaaaaaaaaaaaaaa" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "aaaaaaaaaaaaaaa";
        
        /// <summary>
        /// Тип "aaaaaaaaaaaaaaaaaBCD" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText1 = "aaaaaaaaaaaaaaaaaBCD";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "FourthAssertMethod"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class FourthAssertMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBox2" надпись равняется "(17)aBCD"
        /// </summary>
        public string UITextBox2EditText = "(17)aBCD";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "Insert_advcsdc245"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class Insert_advcsdc245Params
    {
        
        #region Fields
        /// <summary>
        /// Тип "ADVCSDC245" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "ADVCSDC245";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "FifthAssertMethod"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class FifthAssertMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBox2" надпись равняется ""
        /// </summary>
        public string UITextBox2EditText = "";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIПроводникWindow : WinWindow
    {
        
        public UIПроводникWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Проводник";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Проводник");
            this.WindowTitles.Add("Локальный диск (C:)");
            this.WindowTitles.Add("Users");
            this.WindowTitles.Add("MSI");
            this.WindowTitles.Add("source");
            this.WindowTitles.Add("repos");
            this.WindowTitles.Add("okpo_lab1");
            this.WindowTitles.Add("bin");
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIДеревоWindow UIДеревоWindow
        {
            get
            {
                if ((this.mUIДеревоWindow == null))
                {
                    this.mUIДеревоWindow = new UIДеревоWindow(this);
                }
                return this.mUIДеревоWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIItemWindow6 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow6(this);
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UIItemWindow7 UIItemWindow7
        {
            get
            {
                if ((this.mUIItemWindow7 == null))
                {
                    this.mUIItemWindow7 = new UIItemWindow7(this);
                }
                return this.mUIItemWindow7;
            }
        }
        
        public UIItemWindow8 UIItemWindow8
        {
            get
            {
                if ((this.mUIItemWindow8 == null))
                {
                    this.mUIItemWindow8 = new UIItemWindow8(this);
                }
                return this.mUIItemWindow8;
            }
        }
        #endregion
        
        #region Fields
        private UIДеревоWindow mUIДеревоWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UIItemWindow6 mUIItemWindow6;
        
        private UIItemWindow7 mUIItemWindow7;
        
        private UIItemWindow8 mUIItemWindow8;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIДеревоWindow : WinWindow
    {
        
        public UIДеревоWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Проводник");
            this.WindowTitles.Add("Локальный диск (C:)");
            #endregion
        }
        
        #region Properties
        public UIРабочийстолTreeItem UIРабочийстолTreeItem
        {
            get
            {
                if ((this.mUIРабочийстолTreeItem == null))
                {
                    this.mUIРабочийстолTreeItem = new UIРабочийстолTreeItem(this);
                }
                return this.mUIРабочийстолTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIРабочийстолTreeItem mUIРабочийстолTreeItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIРабочийстолTreeItem : WinTreeItem
    {
        
        public UIРабочийстолTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Рабочий стол";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Проводник");
            this.WindowTitles.Add("Локальный диск (C:)");
            #endregion
        }
        
        #region Properties
        public UIЭтоткомпьютерTreeItem UIЭтоткомпьютерTreeItem
        {
            get
            {
                if ((this.mUIЭтоткомпьютерTreeItem == null))
                {
                    this.mUIЭтоткомпьютерTreeItem = new UIЭтоткомпьютерTreeItem(this);
                }
                return this.mUIЭтоткомпьютерTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIЭтоткомпьютерTreeItem mUIЭтоткомпьютерTreeItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIЭтоткомпьютерTreeItem : WinTreeItem
    {
        
        public UIЭтоткомпьютерTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Этот компьютер";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Проводник");
            this.WindowTitles.Add("Локальный диск (C:)");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIЛокальныйдискCTreeItem
        {
            get
            {
                if ((this.mUIЛокальныйдискCTreeItem == null))
                {
                    this.mUIЛокальныйдискCTreeItem = new WinTreeItem(this);
                    #region Условия поиска
                    this.mUIЛокальныйдискCTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Локальный диск (C:)";
                    this.mUIЛокальныйдискCTreeItem.SearchProperties["Value"] = "2";
                    this.mUIЛокальныйдискCTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIЛокальныйдискCTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIЛокальныйдискCTreeItem.WindowTitles.Add("Проводник");
                    this.mUIЛокальныйдискCTreeItem.WindowTitles.Add("Локальный диск (C:)");
                    #endregion
                }
                return this.mUIЛокальныйдискCTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIЛокальныйдискCTreeItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Локальный диск (C:)");
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIUsersListItem UIUsersListItem
        {
            get
            {
                if ((this.mUIUsersListItem == null))
                {
                    this.mUIUsersListItem = new UIUsersListItem(this);
                }
                return this.mUIUsersListItem;
            }
        }
        
        public UIOkpo_lab1ListItem UIOkpo_lab1ListItem
        {
            get
            {
                if ((this.mUIOkpo_lab1ListItem == null))
                {
                    this.mUIOkpo_lab1ListItem = new UIOkpo_lab1ListItem(this);
                }
                return this.mUIOkpo_lab1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIUsersListItem mUIUsersListItem;
        
        private UIOkpo_lab1ListItem mUIOkpo_lab1ListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIUsersListItem : WinListItem
    {
        
        public UIUsersListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Users";
            this.WindowTitles.Add("Локальный диск (C:)");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Локальный диск (C:)");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIOkpo_lab1ListItem : WinListItem
    {
        
        public UIOkpo_lab1ListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "okpo_lab1";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Users");
            #endregion
        }
        
        #region Properties
        public UIMSIListItem UIMSIListItem
        {
            get
            {
                if ((this.mUIMSIListItem == null))
                {
                    this.mUIMSIListItem = new UIMSIListItem(this);
                }
                return this.mUIMSIListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIMSIListItem mUIMSIListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIMSIListItem : WinListItem
    {
        
        public UIMSIListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "MSI";
            this.WindowTitles.Add("Users");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Users");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("MSI");
            #endregion
        }
        
        #region Properties
        public UISourceListItem UISourceListItem
        {
            get
            {
                if ((this.mUISourceListItem == null))
                {
                    this.mUISourceListItem = new UISourceListItem(this);
                }
                return this.mUISourceListItem;
            }
        }
        #endregion
        
        #region Fields
        private UISourceListItem mUISourceListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UISourceListItem : WinListItem
    {
        
        public UISourceListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "source";
            this.WindowTitles.Add("MSI");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("MSI");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("source");
            #endregion
        }
        
        #region Properties
        public UIReposListItem UIReposListItem
        {
            get
            {
                if ((this.mUIReposListItem == null))
                {
                    this.mUIReposListItem = new UIReposListItem(this);
                }
                return this.mUIReposListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIReposListItem mUIReposListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIReposListItem : WinListItem
    {
        
        public UIReposListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "repos";
            this.WindowTitles.Add("source");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("source");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("repos");
            #endregion
        }
        
        #region Properties
        public UIOkpo_lab1ListItem1 UIOkpo_lab1ListItem
        {
            get
            {
                if ((this.mUIOkpo_lab1ListItem == null))
                {
                    this.mUIOkpo_lab1ListItem = new UIOkpo_lab1ListItem1(this);
                }
                return this.mUIOkpo_lab1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIOkpo_lab1ListItem1 mUIOkpo_lab1ListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIOkpo_lab1ListItem1 : WinListItem
    {
        
        public UIOkpo_lab1ListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "okpo_lab1";
            this.WindowTitles.Add("repos");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("repos");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("okpo_lab1");
            #endregion
        }
        
        #region Properties
        public UIOkpo_lab1ListItem2 UIOkpo_lab1ListItem
        {
            get
            {
                if ((this.mUIOkpo_lab1ListItem == null))
                {
                    this.mUIOkpo_lab1ListItem = new UIOkpo_lab1ListItem2(this);
                }
                return this.mUIOkpo_lab1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIOkpo_lab1ListItem2 mUIOkpo_lab1ListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIOkpo_lab1ListItem2 : WinListItem
    {
        
        public UIOkpo_lab1ListItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "okpo_lab1";
            this.WindowTitles.Add("okpo_lab1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("okpo_lab1");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("okpo_lab1");
            #endregion
        }
        
        #region Properties
        public UIBinListItem UIBinListItem
        {
            get
            {
                if ((this.mUIBinListItem == null))
                {
                    this.mUIBinListItem = new UIBinListItem(this);
                }
                return this.mUIBinListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIBinListItem mUIBinListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIBinListItem : WinListItem
    {
        
        public UIBinListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "bin";
            this.WindowTitles.Add("okpo_lab1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("okpo_lab1");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("bin");
            #endregion
        }
        
        #region Properties
        public UIDebugListItem UIDebugListItem
        {
            get
            {
                if ((this.mUIDebugListItem == null))
                {
                    this.mUIDebugListItem = new UIDebugListItem(this);
                }
                return this.mUIDebugListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDebugListItem mUIDebugListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIDebugListItem : WinListItem
    {
        
        public UIDebugListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Debug";
            this.WindowTitles.Add("bin");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("bin");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIOkpo_lab1ListItem3 UIOkpo_lab1ListItem
        {
            get
            {
                if ((this.mUIOkpo_lab1ListItem == null))
                {
                    this.mUIOkpo_lab1ListItem = new UIOkpo_lab1ListItem3(this);
                }
                return this.mUIOkpo_lab1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIOkpo_lab1ListItem3 mUIOkpo_lab1ListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIOkpo_lab1ListItem3 : WinListItem
    {
        
        public UIOkpo_lab1ListItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "okpo_lab1";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIЛабораторнаяработа3ВWindow : WinWindow
    {
        
        public UIЛабораторнаяработа3ВWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Лабораторная работа №3 Вариант 8";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Лабораторная работа №3 Вариант 8");
            #endregion
        }
        
        #region Properties
        public UITextBox1Window UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window(this);
                }
                return this.mUITextBox1Window;
            }
        }
        
        public UIОбработатьтекстWindow UIОбработатьтекстWindow
        {
            get
            {
                if ((this.mUIОбработатьтекстWindow == null))
                {
                    this.mUIОбработатьтекстWindow = new UIОбработатьтекстWindow(this);
                }
                return this.mUIОбработатьтекстWindow;
            }
        }
        
        public UITextBox2Window UITextBox2Window
        {
            get
            {
                if ((this.mUITextBox2Window == null))
                {
                    this.mUITextBox2Window = new UITextBox2Window(this);
                }
                return this.mUITextBox2Window;
            }
        }
        
        public UIВыходWindow UIВыходWindow
        {
            get
            {
                if ((this.mUIВыходWindow == null))
                {
                    this.mUIВыходWindow = new UIВыходWindow(this);
                }
                return this.mUIВыходWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox1Window mUITextBox1Window;
        
        private UIОбработатьтекстWindow mUIОбработатьтекстWindow;
        
        private UITextBox2Window mUITextBox2Window;
        
        private UIВыходWindow mUIВыходWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UITextBox1Window : WinWindow
    {
        
        public UITextBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Лабораторная работа №3 Вариант 8");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox1Edit.WindowTitles.Add("Лабораторная работа №3 Вариант 8");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIОбработатьтекстWindow : WinWindow
    {
        
        public UIОбработатьтекстWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Лабораторная работа №3 Вариант 8");
            #endregion
        }
        
        #region Properties
        public WinButton UIОбработатьтекстButton
        {
            get
            {
                if ((this.mUIОбработатьтекстButton == null))
                {
                    this.mUIОбработатьтекстButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОбработатьтекстButton.SearchProperties[WinButton.PropertyNames.Name] = "Обработать текст";
                    this.mUIОбработатьтекстButton.WindowTitles.Add("Лабораторная работа №3 Вариант 8");
                    #endregion
                }
                return this.mUIОбработатьтекстButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОбработатьтекстButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UITextBox2Window : WinWindow
    {
        
        public UITextBox2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox2";
            this.WindowTitles.Add("Лабораторная работа №3 Вариант 8");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox2Edit
        {
            get
            {
                if ((this.mUITextBox2Edit == null))
                {
                    this.mUITextBox2Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox2Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Результат обработки текста:";
                    this.mUITextBox2Edit.WindowTitles.Add("Лабораторная работа №3 Вариант 8");
                    #endregion
                }
                return this.mUITextBox2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox2Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIВыходWindow : WinWindow
    {
        
        public UIВыходWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button2";
            this.WindowTitles.Add("Лабораторная работа №3 Вариант 8");
            #endregion
        }
        
        #region Properties
        public WinButton UIВыходButton
        {
            get
            {
                if ((this.mUIВыходButton == null))
                {
                    this.mUIВыходButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВыходButton.SearchProperties[WinButton.PropertyNames.Name] = "Выход";
                    this.mUIВыходButton.WindowTitles.Add("Лабораторная работа №3 Вариант 8");
                    #endregion
                }
                return this.mUIВыходButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВыходButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIСообщениеWindow : WinWindow
    {
        
        public UIСообщениеWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Сообщение";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Сообщение");
            #endregion
        }
        
        #region Properties
        public UIОКWindow UIОКWindow
        {
            get
            {
                if ((this.mUIОКWindow == null))
                {
                    this.mUIОКWindow = new UIОКWindow(this);
                }
                return this.mUIОКWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIОКWindow mUIОКWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.29514.35")]
    public class UIОКWindow : WinWindow
    {
        
        public UIОКWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Сообщение");
            #endregion
        }
        
        #region Properties
        public WinButton UIОКButton
        {
            get
            {
                if ((this.mUIОКButton == null))
                {
                    this.mUIОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mUIОКButton.WindowTitles.Add("Сообщение");
                    #endregion
                }
                return this.mUIОКButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОКButton;
        #endregion
    }
}
